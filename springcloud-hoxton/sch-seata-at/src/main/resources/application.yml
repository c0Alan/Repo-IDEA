spring:
  devtools:
    restart:
      additional-paths: src/main/*
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver      # 配置MySQL的驱动程序类
    url: jdbc:mysql://${mysql.server}/${mysql.dbName}?useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true           # 数据库连接地址
    username: ${mysql.username}
    password: ${mysql.password}

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  global-config:
    # 逻辑删除配置
    db-config:
      # 删除前
      logic-not-delete-value: 1
      # 删除后
      logic-delete-value: 0

seata:
  registry: # TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
    # 参考tc服务自己的registry.conf中的配置
    type: nacos
    nacos: # tc
      server-addr: nacos-center.v-base:8848
      namespace: c1c3193f-0436-4511-b3b6-cac0db957973
      group: DEFAULT_GROUP
      application: seata-server # tc服务在nacos中的服务名称
      username: nacos
      password: nacos
  tx-service-group: seata-demo # 事务组，将事务进行了分组，在以后的高可用的时候方便快速失败，根据这个获取tc服务的cluster名称 相当于将所在的微服务进行了了分组如下单事务组，这个事务组被下面的配置定义成上海集群，那么这是事务组就会被上海集群的TC 服务器管理。
  service:
    vgroup-mapping: # 事务组与TC服务cluster的映射关系
      seata-demo: default
    data-source-proxy-mode: AT #事务模式
  client:
    rm:
      lock:
        retry-times: 30
        retry-interval: 5000









